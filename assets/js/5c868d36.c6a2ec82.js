"use strict";(self.webpackChunkredis=self.webpackChunkredis||[]).push([[1974],{8453:(e,s,d)=>{d.d(s,{R:()=>i,x:()=>c});var r=d(6540);const t={},n=r.createContext(t);function i(e){const s=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(n.Provider,{value:s},e.children)}},9516:(e,s,d)=>{d.r(s),d.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"tutorial-basics/create-a-page","title":"Redis Stream Commands","description":"Redis Stream commands are basically cover the following:","source":"@site/docs/tutorial-basics/create-a-page.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/create-a-page","permalink":"/spring-data-redis-streams/docs/tutorial-basics/create-a-page","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-page.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Tutorial - Basics","permalink":"/spring-data-redis-streams/docs/category/tutorial---basics"},"next":{"title":"XADD","permalink":"/spring-data-redis-streams/docs/tutorial-basics/xadd"}}');var t=d(4848),n=d(8453);const i={sidebar_position:1},c="Redis Stream Commands",a={},l=[{value:"Add Data",id:"add-data",level:2},{value:"List or Inspect Data",id:"list-or-inspect-data",level:2},{value:"Inspect Data",id:"inspect-data",level:2},{value:"Read Data",id:"read-data",level:2},{value:"Delete Data",id:"delete-data",level:2},{value:"Acknowledge / Claim Data",id:"acknowledge--claim-data",level:2},{value:"Non-Standard or Rare Commands",id:"non-standard-or-rare-commands",level:2},{value:"Group Operation",id:"group-operation",level:2}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"redis-stream-commands",children:"Redis Stream Commands"})}),"\n",(0,t.jsx)(s.p,{children:"Redis Stream commands are basically cover the following:"}),"\n",(0,t.jsx)(s.h2,{id:"add-data",children:"Add Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XADD"})}),(0,t.jsx)(s.td,{children:"Adds a new entry to a stream."})]})})]}),"\n",(0,t.jsx)(s.h2,{id:"list-or-inspect-data",children:"List or Inspect Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XRANGE"})}),(0,t.jsx)(s.td,{children:"Lists entries in a given range (by ID), ascending."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XREVRANGE"})}),(0,t.jsx)(s.td,{children:"Lists entries in a given range, descending order."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XLEN"})}),(0,t.jsx)(s.td,{children:"Returns the number of entries in a stream."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"inspect-data",children:"Inspect Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XINFO STREAM"})}),(0,t.jsx)(s.td,{children:"Shows information about the stream (length, first/last ID, etc.)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XINFO GROUPS"})}),(0,t.jsx)(s.td,{children:"Lists all consumer groups for a stream."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XINFO CONSUMERS"})}),(0,t.jsx)(s.td,{children:"Lists consumers in a given group."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"read-data",children:"Read Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XREAD"})}),(0,t.jsx)(s.td,{children:"Reads one or more entries from a stream (typically for polling)."})]})})]}),"\n",(0,t.jsx)(s.h2,{id:"delete-data",children:"Delete Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XDEL"})}),(0,t.jsx)(s.td,{children:"Removes one or more entries from a stream."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XTRIM"})}),(0,t.jsx)(s.td,{children:"Trims older stream entries to cap the stream size."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"acknowledge--claim-data",children:"Acknowledge / Claim Data"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XACK"})}),(0,t.jsx)(s.td,{children:"Acknowledges successful processing of an entry by a consumer group."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XAUTOCLAIM"})}),(0,t.jsx)(s.td,{children:"Auto-claims unacknowledged messages that exceed an idle time."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XCLAIM"})}),(0,t.jsx)(s.td,{children:"Transfers pending messages from one consumer to another."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XSETID"})}),(0,t.jsx)(s.td,{children:"Changes the last ID in the stream (use with caution)."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"non-standard-or-rare-commands",children:"Non-Standard or Rare Commands"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XACKDEL"})}),(0,t.jsxs)(s.td,{children:["(Not a real Redis command \u2014 likely a custom combination of ",(0,t.jsx)(s.code,{children:"XACK"})," + ",(0,t.jsx)(s.code,{children:"XDEL"}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XDELX"})}),(0,t.jsxs)(s.td,{children:["(Not a real Redis command \u2014 possibly a typo or alias for ",(0,t.jsx)(s.code,{children:"XDEL"}),")."]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"group-operation",children:"Group Operation"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XREADGROUP"})}),(0,t.jsx)(s.td,{children:"Reads entries on behalf of a consumer group (distributed processing)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XGROUP CREATE"})}),(0,t.jsx)(s.td,{children:"Creates a new consumer group for a stream."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XGROUP CREATECONSUMER"})}),(0,t.jsx)(s.td,{children:"Registers a new consumer to a group."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XGROUP DELCONSUMER"})}),(0,t.jsx)(s.td,{children:"Deletes a consumer from a consumer group."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XGROUP DESTROY"})}),(0,t.jsx)(s.td,{children:"Deletes a consumer group."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XGROUP SETID"})}),(0,t.jsx)(s.td,{children:"Resets the ID from which the group starts consuming."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"XPENDING"})}),(0,t.jsx)(s.td,{children:"Lists pending messages for a group (not yet acknowledged)."})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Reference: ",(0,t.jsx)(s.a,{href:"https://redis.io/docs/latest/develop/data-types/streams",children:"Redis University Stream"})]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);